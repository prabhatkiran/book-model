{
  "_from": "async-wait-until",
  "_id": "async-wait-until@1.2.4",
  "_inBundle": false,
  "_integrity": "sha512-H7ZR3cu1THxrJiDgevu+PgbyT0o5P/9nsCZj70ckruJCMWt/UOQmGo65wKWvEQN69MJk140x5/Z01ZQjzfwyOw==",
  "_location": "/async-wait-until",
  "_phantomChildren": {},
  "_requested": {
    "type": "tag",
    "registry": true,
    "raw": "async-wait-until",
    "name": "async-wait-until",
    "escapedName": "async-wait-until",
    "rawSpec": "",
    "saveSpec": null,
    "fetchSpec": "latest"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "http://nexus.wdf.sap.corp:8081/nexus/repository/build.milestones.npm/async-wait-until/-/async-wait-until-1.2.4.tgz",
  "_shasum": "55a6c29145b8037742a629b0ae0b69b5e2988404",
  "_spec": "async-wait-until",
  "_where": "/Users/i322357/Desktop/reactJs/react-tutorial",
  "author": {
    "name": "devlato",
    "email": "npm@devlato.com",
    "url": "https://devlato.com/"
  },
  "bugs": {
    "url": "https://github.com/devlato/waitUntil/issues"
  },
  "bundleDependencies": false,
  "deprecated": false,
  "description": "Wait while predicate completes and resolve a Promise",
  "devDependencies": {
    "codeclimate-test-reporter": "0.4.0",
    "coveralls": "2.11.15",
    "eslint": "3.14.1",
    "eslint-config-airbnb-base": "11.0.1",
    "eslint-plugin-import": "2.2.0",
    "husky": "0.13.1",
    "jest": "18.1.0"
  },
  "engines": {
    "node": ">= 4",
    "npm": ">= 2"
  },
  "files": [
    "package.json",
    "README.md",
    ".gitignore",
    ".editorconfig",
    "src"
  ],
  "homepage": "https://github.com/devlato/waitUntil#readme",
  "keywords": [
    "apply",
    "when",
    "lodash",
    "async",
    "then",
    "promise",
    "wait",
    "timeout",
    "interval",
    "until",
    "for",
    "bluebird"
  ],
  "license": "MIT",
  "main": "src/waitUntil.js",
  "name": "async-wait-until",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/devlato/waitUntil.git"
  },
  "scripts": {
    "codeclimate": "cat ./coverage/lcov.info | codeclimate-test-reporter",
    "coveralls": "cat ./coverage/lcov.info | coveralls",
    "lint": "eslint --config .eslintrc --ext .js .",
    "prepush": "npm run validate",
    "test": "NODE_ENV=test jest -u --no-cache --config .jestrc",
    "test:coverage": "NODE_ENV=test jest --coverage --no-cache --config .jestrc",
    "test:report": "npm run coveralls && npm run codeclimate",
    "validate": "npm run lint && npm run test:coverage"
  },
  "types": "src/index.d.ts",
  "version": "1.2.4"
}
